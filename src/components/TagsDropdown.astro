---
interface Props {
    tags: string[];
}

const { tags } = Astro.props;
---

<div class="dropdown-container">
    <div class="accordion">
        <ul>
            {tags.toSpliced(0, 1).map((tag) => <li class="tag">{tag}</li>)}
        </ul>
    </div>
    <button class="tag opener" aria-label="Open tags" class="opener"
        >{tags[0]}</button
    >
</div>

<style>
    .dropdown-container {
        z-index: 3;
        position: relative;
        display: inline-block;
    }
    .opener {
        appearance: none;
    }
    .opener:before {
        content: 'â–¶';
        font-size: 0.9em;
        left: 0.8em;
        transition: rotate 0.25s;
        transform-origin: top left;
    }
    div:is(:hover, :has(.opener:is(:active, :focus))) .opener:before {
        rotate: -90deg;
    }
    div:is(:hover, :has(.opener:is(:active, :focus))) ul {
        bottom: 0;
        visibility: visible;
    }
    .accordion {
        position: absolute;
        padding-bottom: calc(1em + 2px);
        bottom: 0;
        display: grid;
        overflow: hidden;
        margin: auto 0 5px 0;
        clip-path: polygon(
            0 0,
            100% 0,
            100% calc(100% - 0.5em),
            0 calc(100% - 0.5em)
        );
    }
    ul {
        padding: 0;
        display: grid;
        gap: 2px;
        margin: 0 0 4px 0;
        overflow: hidden;
        bottom: -100%;
        position: relative;
        transition:
            250ms bottom ease,
            250ms visibility ease;
        visibility: hidden;
        animation-fill-mode: forwards;
    }
    @media (prefers-reduced-motion) {
        ul {
            transition: none;
        }
    }
</style>

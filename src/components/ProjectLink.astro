---
import GithubPath, { viewbox as githubViewbox } from './GithubPath.astro';
import MwsPath, { viewbox as mwsViewbox } from './MwsPath.astro';
import BlogPath, { viewbox as blogViewbox } from './BlogPath.astro';

const TYPES = {
    github: {
        path: GithubPath,
        viewbox: githubViewbox,
    },
    modworkshop: {
        path: MwsPath,
        viewbox: mwsViewbox,
    },
    blog: {
        path: BlogPath,
        viewbox: blogViewbox,
    },
};

interface Props {
    type: keyof typeof TYPES;
    url: string;
    size?: number;
    sameTab?: boolean;
}

const { url, size, type, sameTab } = Astro.props;
const iconSize = `${size ?? 32}px`;
const Icon = TYPES[type].path;
const viewbox = TYPES[type].viewbox;
---

<a
    href={url}
    target={sameTab ? undefined : '_blank'}
    rel={sameTab ? undefined : 'noopener'}
    aria-label={`Project on ${type}`}
>
    <svg
        width={iconSize}
        height={iconSize}
        viewBox={viewbox}
        xmlns="http://www.w3.org/2000/svg"
        aria-hidden="true"
    >
        <defs>
            <linearGradient id="gradient" x2="0" y2="1">
                <stop offset="0%" stop-color="var(--text-color)"></stop>
                <stop offset="100%" stop-color="var(--tag-background-1)"></stop>
            </linearGradient>
        </defs>
        <Icon />
    </svg>
</a>

<style>
    a {
        position: relative;
        bottom: 6px;
        text-decoration: none;
    }
    a svg {
        fill: #fff;
    }
    a:is(:hover, a:active, a:focus) svg {
        fill: url(#gradient);
    }
</style>
